on: [push]

jobs:
  security_tests:
    runs-on: ubuntu-latest

    permissions:
      security-events: write       # for Trivy SARIF or ZAP reports, if you upload them

    steps:
    # ---------------- 0. Checkout source ----------------
    - uses: actions/checkout@v4

    # ---------------- 1. Build your webâ€‘app image ----------------
    - name: Build web image
      run: |
        docker build -t ghcr.io/${{ github.repository_owner }}/hello-world-action:${{ github.sha }} \
          ./hello-world-docker-action

    # ---------------- 2. Start the container *detached* -----------
    - name: Run web app (background)
      run: |
        docker run -d --rm --name web \
          -p 8080:8080 \
          ghcr.io/${{ github.repository_owner }}/hello-world-action:${{ github.sha }}

    # optional: give the server a moment to come up or poll it
    - name: Wait until server is ready
      run: |
        for i in {1..30}; do
          curl -sSf http://localhost:8080 >/dev/null && break
          sleep 2
        done

    # ---------------- 3. Dynamic scan with ZAP --------------------
    - name: ZAP Full Scan
      uses: zaproxy/action-full-scan@v0.12.0   # latest at time of writing
      with:
        target: 'http://localhost:8080/'
        fail_action: false          # fail the job on Medium/High alerts
        cmd_options: '-a'          # include alpha *active* + passive rules
        allow_issue_writing: 'false'
        docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
    
    #- name: ZAP baseline DAST
    #  uses: zaproxy/action-baseline@v0.10.0
    #  with:
    #    target: 'http://localhost:8080'
    #    cmd_options: '-a -T 1200'
    #    fail_action: false 

    # ---------------- 4. SCA / SAST / etc. (e.g. Trivy) ----------
    - name: Trivy vulnerability scan
      if: always()    
      uses: aquasecurity/trivy-action@0.32.0
      with:
        scan-type: image
        image-ref: ghcr.io/${{ github.repository_owner }}/hello-world-action:${{ github.sha }}
        format: table
        vuln-type: os,library

    # ---------------- 5. Always clean up the container -----------
    - name: Stop web app
      if: always()                   # run even when previous steps fail
      run: docker stop web
